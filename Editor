let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/.config/nvim
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +175 ~/.dotfiles/irssi/config
badd +6 ~/Documents/wiki/index.wiki
badd +5 task\ projects\ special
badd +3 ~/.local/builds/pyShelf/wiki/index.wiki
badd +1 task\ next\ report
badd +12 ~/.local/builds/pyShelf/wiki/Frontend.wiki
badd +1 ~/.local/builds/pyShelf/wiki/Book\ Scraping\ System.wiki
badd +1 ~/.local/builds/pyShelf/wiki/OPDS.wiki
badd +1 ~/.local/builds/pyShelf/wiki/Book\ Attachment\ System.wiki
badd +1 ~/.local/builds/pyShelf/wiki/REST\ API.wiki
badd +0 task\ calendar\ special
badd +239 lua/plugins.lua
argglobal
%argdel
$argadd ~/.local/builds/pyShelf/wiki/Frontend.wiki
set stal=2
tabnew +setlocal\ bufhidden=wipe
tabrewind
edit ~/.local/builds/pyShelf/wiki/index.wiki
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
split
1wincmd k
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd w
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 34 + 24) / 49)
exe '2resize ' . ((&lines * 34 + 24) / 49)
exe 'vert 2resize ' . ((&columns * 59 + 51) / 103)
exe '3resize ' . ((&lines * 14 + 24) / 49)
exe '4resize ' . ((&lines * 14 + 24) / 49)
exe 'vert 4resize ' . ((&columns * 83 + 51) / 103)
argglobal
balt ~/.local/builds/pyShelf/wiki/Frontend.wiki
let s:cpo_save=&cpo
set cpo&vim
inoremap <buffer> <expr> <BS> v:lua.MPairs.autopairs_bs()
inoremap <buffer> <silent> <expr> <Plug>VimwikiTablePrevCell vimwiki#tbl#kbd_shift_tab()
inoremap <buffer> <silent> <expr> <Plug>VimwikiTableNextCell vimwiki#tbl#kbd_tab()
inoremap <buffer> <silent> <expr> <S-CR> pumvisible() ? '' : ':VimwikiReturn 2 2'
imap <buffer> <C-L><C-M> <Plug>VimwikiListToggle
imap <buffer> <C-L><C-K> <Plug>VimwikiListPrevSymbol
imap <buffer> <C-L><C-J> <Plug>VimwikiListNextSymbol
imap <buffer> <C-T> <Plug>VimwikiIncreaseLvlSingleItem
imap <buffer> <C-D> <Plug>VimwikiDecreaseLvlSingleItem
nmap <buffer> 	 <Plug>VimwikiNextLink
vmap <buffer>  <Plug>VimwikiNormalizeLinkVisualCR
nnoremap <buffer> <silent>  :py3 Mappings.task_info_or_vimwiki_follow_link()
vmap <buffer> + <Plug>VimwikiNormalizeLinkVisual
nmap <buffer> + <Plug>VimwikiNormalizeLink
nnoremap <buffer> <silent> ,tc√û <Nop>
nnoremap <buffer> <silent> ,tG√û <Nop>
nnoremap <buffer> <silent> ,tb√û <Nop>
nnoremap <buffer> <silent> ,th√û <Nop>
vmap <buffer> ,wc <Plug>VimwikiColorize
nmap <buffer> ,wc <Plug>VimwikiColorizeNormal
nmap <buffer> ,wr <Plug>VimwikiRenameFile
nmap <buffer> ,wd <Plug>VimwikiDeleteFile
nmap <buffer> ,wn <Plug>VimwikiGoto
nmap <buffer> ,whh <Plug>Vimwiki2HTMLBrowse
nmap <buffer> ,wh <Plug>Vimwiki2HTML
vnoremap <buffer> <silent> ,t- :TaskWikiStop
vnoremap <buffer> <silent> ,t+ :TaskWikiStart
vnoremap <buffer> <silent> ,t. :TaskWikiRedo
vnoremap <buffer> <silent> ,tm :TaskWikiMod
vnoremap <buffer> <silent> ,tl :TaskWikiLink
vnoremap <buffer> <silent> ,ti :TaskWikiInfo
vnoremap <buffer> <silent> ,tg :TaskWikiGrid
vnoremap <buffer> <silent> ,te :TaskWikiEdit
vnoremap <buffer> <silent> ,tD :TaskWikiDelete
vnoremap <buffer> <silent> ,td :TaskWikiDone
vnoremap <buffer> <silent> ,tct :TaskWikiChooseTag
vnoremap <buffer> <silent> ,tcp :TaskWikiChooseProject
vnoremap <buffer> <silent> ,ta :TaskWikiAnnotate
nnoremap <buffer> <silent> ,t- :TaskWikiStop
nnoremap <buffer> <silent> ,t+ :TaskWikiStart
nnoremap <buffer> <silent> ,t. :TaskWikiRedo
nnoremap <buffer> <silent> ,tt :TaskWikiTags
nnoremap <buffer> <silent> ,tS :TaskWikiStats
nnoremap <buffer> <silent> ,ts :TaskWikiProjectsSummary
nnoremap <buffer> <silent> ,tp :TaskWikiProjects
nnoremap <buffer> <silent> ,tm :TaskWikiMod
nnoremap <buffer> <silent> ,tl :TaskWikiLink
nnoremap <buffer> <silent> ,ti :TaskWikiInfo
nnoremap <buffer> <silent> ,tha :TaskWikiHistoryAnnual
nnoremap <buffer> <silent> ,thm :TaskWikiHistoryMonthly
nnoremap <buffer> <silent> ,tGa :TaskWikiGhistoryAnnual
nnoremap <buffer> <silent> ,tGm :TaskWikiGhistoryMonthly
nnoremap <buffer> <silent> ,tg :TaskWikiGrid
nnoremap <buffer> <silent> ,te :TaskWikiEdit
nnoremap <buffer> <silent> ,tD :TaskWikiDelete
nnoremap <buffer> <silent> ,td :TaskWikiDone
nnoremap <buffer> <silent> ,tC :TaskWikiCalendar
nnoremap <buffer> <silent> ,tct :TaskWikiChooseTag
nnoremap <buffer> <silent> ,tcp :TaskWikiChooseProject
nnoremap <buffer> <silent> ,tbm :TaskWikiBurndownMonthly
nnoremap <buffer> <silent> ,tbw :TaskWikiBurndownWeekly
nnoremap <buffer> <silent> ,tbd :TaskWikiBurndownDaily
nnoremap <buffer> <silent> ,ta :TaskWikiAnnotate
nmap <buffer> - <Plug>VimwikiRemoveHeaderLevel
nmap <buffer> = <Plug>VimwikiAddHeaderLevel
nmap <buffer> O <Plug>VimwikiListO
nmap <buffer> [= <Plug>VimwikiGoToPrevSiblingHeader
nmap <buffer> [[ <Plug>VimwikiGoToPrevHeader
nmap <buffer> [u <Plug>VimwikiGoToParentHeader
nmap <buffer> ]= <Plug>VimwikiGoToNextSiblingHeader
nmap <buffer> ]] <Plug>VimwikiGoToNextHeader
nmap <buffer> ]u <Plug>VimwikiGoToParentHeader
vmap <buffer> al <Plug>VimwikiTextObjListChildrenV
omap <buffer> al <Plug>VimwikiTextObjListChildren
vmap <buffer> ac <Plug>VimwikiTextObjColumnV
omap <buffer> ac <Plug>VimwikiTextObjColumn
vmap <buffer> a\ <Plug>VimwikiTextObjTableCellV
omap <buffer> a\ <Plug>VimwikiTextObjTableCell
vmap <buffer> aH <Plug>VimwikiTextObjHeaderSubV
omap <buffer> aH <Plug>VimwikiTextObjHeaderSub
vmap <buffer> ah <Plug>VimwikiTextObjHeaderV
omap <buffer> ah <Plug>VimwikiTextObjHeader
nnoremap <buffer> <silent> gw√û <Nop>
nnoremap <buffer> <silent> gq√û <Nop>
nnoremap <buffer> <silent> gn√û <Nop>
nmap <buffer> gw1 <Plug>VimwikiTableAlignW1
nmap <buffer> gww <Plug>VimwikiTableAlignW
nmap <buffer> gq1 <Plug>VimwikiTableAlignQ1
nmap <buffer> gqq <Plug>VimwikiTableAlignQ
noremap <buffer> <silent> gLA :VimwikiChangeSymbolInListTo A)
noremap <buffer> <silent> glA :VimwikiChangeSymbolTo A)
noremap <buffer> <silent> gLa :VimwikiChangeSymbolInListTo a)
noremap <buffer> <silent> gla :VimwikiChangeSymbolTo a)
noremap <buffer> <silent> gLI :VimwikiChangeSymbolInListTo I)
noremap <buffer> <silent> glI :VimwikiChangeSymbolTo I)
noremap <buffer> <silent> gLi :VimwikiChangeSymbolInListTo i)
noremap <buffer> <silent> gli :VimwikiChangeSymbolTo i)
noremap <buffer> <silent> gL1 :VimwikiChangeSymbolInListTo 1.
noremap <buffer> <silent> gl1 :VimwikiChangeSymbolTo 1.
noremap <buffer> <silent> gL# :VimwikiChangeSymbolInListTo #
noremap <buffer> <silent> gl# :VimwikiChangeSymbolTo #
noremap <buffer> <silent> gL* :VimwikiChangeSymbolInListTo *
noremap <buffer> <silent> gl* :VimwikiChangeSymbolTo *
noremap <buffer> <silent> gL- :VimwikiChangeSymbolInListTo -
noremap <buffer> <silent> gl- :VimwikiChangeSymbolTo -
nmap <buffer> gL <Plug>VimwikiRemoveCBInList
nmap <buffer> gl <Plug>VimwikiRemoveSingleCB
nmap <buffer> gLR <Plug>VimwikiRenumberAllLists
nmap <buffer> gLr <Plug>VimwikiRenumberAllLists
nmap <buffer> glr <Plug>VimwikiRenumberList
nmap <buffer> gLL <Plug>VimwikiIncreaseLvlWholeItem
nmap <buffer> gLl <Plug>VimwikiIncreaseLvlWholeItem
nmap <buffer> gLH <Plug>VimwikiDecreaseLvlWholeItem
nmap <buffer> gLh <Plug>VimwikiDecreaseLvlWholeItem
nmap <buffer> gll <Plug>VimwikiIncreaseLvlSingleItem
nmap <buffer> glh <Plug>VimwikiDecreaseLvlSingleItem
vmap <buffer> glp <Plug>VimwikiDecrementListItem
nmap <buffer> glp <Plug>VimwikiDecrementListItem
vmap <buffer> gln <Plug>VimwikiIncrementListItem
nmap <buffer> gln <Plug>VimwikiIncrementListItem
vmap <buffer> glx <Plug>VimwikiToggleRejectedListItem
nmap <buffer> glx <Plug>VimwikiToggleRejectedListItem
nmap <buffer> gnt <Plug>VimwikiNextTask
vmap <buffer> il <Plug>VimwikiTextObjListSingleV
omap <buffer> il <Plug>VimwikiTextObjListSingle
vmap <buffer> ic <Plug>VimwikiTextObjColumnInnerV
omap <buffer> ic <Plug>VimwikiTextObjColumnInner
vmap <buffer> i\ <Plug>VimwikiTextObjTableCellInnerV
omap <buffer> i\ <Plug>VimwikiTextObjTableCellInner
vmap <buffer> iH <Plug>VimwikiTextObjHeaderSubContentV
omap <buffer> iH <Plug>VimwikiTextObjHeaderSubContent
vmap <buffer> ih <Plug>VimwikiTextObjHeaderContentV
omap <buffer> ih <Plug>VimwikiTextObjHeaderContent
nmap <buffer> o <Plug>VimwikiListo
nnoremap <buffer> <silent> <Plug>VimwikiGoToPrevSiblingHeader :call vimwiki#base#goto_sibling(-1)
nnoremap <buffer> <silent> <Plug>VimwikiGoToNextSiblingHeader :call vimwiki#base#goto_sibling(+1)
nnoremap <buffer> <silent> <Plug>VimwikiGoToPrevHeader :call vimwiki#base#goto_prev_header()
nnoremap <buffer> <silent> <Plug>VimwikiGoToNextHeader :call vimwiki#base#goto_next_header()
nnoremap <buffer> <silent> <Plug>VimwikiGoToParentHeader :call vimwiki#base#goto_parent_header()
nnoremap <buffer> <silent> <Plug>VimwikiRemoveHeaderLevel :call vimwiki#base#RemoveHeaderLevel(v:count)
nnoremap <buffer> <silent> <Plug>VimwikiAddHeaderLevel :call vimwiki#base#AddHeaderLevel(v:count)
vnoremap <buffer> <silent> <Plug>VimwikiTextObjListSingleV :call vimwiki#lst#TO_list_item(1, 1)
onoremap <buffer> <silent> <Plug>VimwikiTextObjListSingle :call vimwiki#lst#TO_list_item(1, 0)
vnoremap <buffer> <silent> <Plug>VimwikiTextObjListChildrenV :call vimwiki#lst#TO_list_item(0, 1)
onoremap <buffer> <silent> <Plug>VimwikiTextObjListChildren :call vimwiki#lst#TO_list_item(0, 0)
vnoremap <buffer> <silent> <Plug>VimwikiTextObjColumnInnerV :call vimwiki#base#TO_table_col(1, 1)
onoremap <buffer> <silent> <Plug>VimwikiTextObjColumnInner :call vimwiki#base#TO_table_col(1, 0)
vnoremap <buffer> <silent> <Plug>VimwikiTextObjColumnV :call vimwiki#base#TO_table_col(0, 1)
onoremap <buffer> <silent> <Plug>VimwikiTextObjColumn :call vimwiki#base#TO_table_col(0, 0)
vnoremap <buffer> <silent> <Plug>VimwikiTextObjTableCellInnerV :call vimwiki#base#TO_table_cell(1, 1)
onoremap <buffer> <silent> <Plug>VimwikiTextObjTableCellInner :call vimwiki#base#TO_table_cell(1, 0)
vnoremap <buffer> <silent> <Plug>VimwikiTextObjTableCellV :call vimwiki#base#TO_table_cell(0, 1)
onoremap <buffer> <silent> <Plug>VimwikiTextObjTableCell :call vimwiki#base#TO_table_cell(0, 0)
vnoremap <buffer> <silent> <Plug>VimwikiTextObjHeaderSubContentV :call vimwiki#base#TO_header(1, 1, v:count1)
onoremap <buffer> <silent> <Plug>VimwikiTextObjHeaderSubContent :call vimwiki#base#TO_header(1, 1, v:count1)
vnoremap <buffer> <silent> <Plug>VimwikiTextObjHeaderSubV :call vimwiki#base#TO_header(0, 1, v:count1)
onoremap <buffer> <silent> <Plug>VimwikiTextObjHeaderSub :call vimwiki#base#TO_header(0, 1, v:count1)
vnoremap <buffer> <silent> <Plug>VimwikiTextObjHeaderContentV :call vimwiki#base#TO_header(1, 0, v:count1)
onoremap <buffer> <silent> <Plug>VimwikiTextObjHeaderContent :call vimwiki#base#TO_header(1, 0, v:count1)
vnoremap <buffer> <silent> <Plug>VimwikiTextObjHeaderV :call vimwiki#base#TO_header(0, 0, v:count1)
onoremap <buffer> <silent> <Plug>VimwikiTextObjHeader :call vimwiki#base#TO_header(0, 0, v:count1)
nmap <buffer> <M-Right> <Plug>VimwikiTableMoveColumnRight
nmap <buffer> <M-Left> <Plug>VimwikiTableMoveColumnLeft
nnoremap <buffer> <silent> <Plug>VimwikiTableAlignW1 :VimwikiTableAlignW 2
nnoremap <buffer> <silent> <Plug>VimwikiTableAlignW :VimwikiTableAlignW
nnoremap <buffer> <silent> <Plug>VimwikiTableAlignQ1 :VimwikiTableAlignQ 2
nnoremap <buffer> <silent> <Plug>VimwikiTableAlignQ :VimwikiTableAlignQ
vmap <buffer> <C-@> <Plug>VimwikiToggleListItem
vmap <buffer> <Nul> <Plug>VimwikiToggleListItem
nmap <buffer> <C-@> <Plug>VimwikiToggleListItem
nmap <buffer> <Nul> <Plug>VimwikiToggleListItem
vmap <buffer> <C-Space> <Plug>VimwikiToggleListItem
nmap <buffer> <C-Space> <Plug>VimwikiToggleListItem
nnoremap <buffer> <silent> <Plug>VimwikiListO :call vimwiki#u#count_exe('call vimwiki#lst#kbd_O()')
nnoremap <buffer> <silent> <Plug>VimwikiListo :call vimwiki#u#count_exe('call vimwiki#lst#kbd_o()')
nmap <buffer> <C-Up> <Plug>VimwikiDiaryPrevDay
nmap <buffer> <C-Down> <Plug>VimwikiDiaryNextDay
nmap <buffer> <S-Tab> <Plug>VimwikiPrevLink
nmap <buffer> <BS> <Plug>VimwikiGoBackLink
nmap <buffer> <C-S-CR> <Plug>VimwikiTabDropLink
nmap <buffer> <D-CR> <Plug>VimwikiTabDropLink
nmap <buffer> <M-CR> <Plug>VimwikiBaddLink
nmap <buffer> <C-CR> <Plug>VimwikiVSplitLink
nmap <buffer> <S-CR> <Plug>VimwikiSplitLink
imap <buffer>  <Plug>VimwikiDecreaseLvlSingleItem
imap <buffer> 	 <Plug>VimwikiTableNextCell
imap <buffer>  <Plug>VimwikiListToggle
imap <buffer>  <Plug>VimwikiListPrevSymbol
imap <buffer> <NL> <Plug>VimwikiListNextSymbol
imap <buffer>  <Plug>VimwikiIncreaseLvlSingleItem
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal backupcopy=
setlocal nobinary
setlocal nobreakindent
setlocal breakindentopt=
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),0],:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal cinscopedecls=public,protected,private
setlocal colorcolumn=80
setlocal comments=b:>,fb:-\ [\ ],fb:-\ [.],fb:-\ [o],fb:-\ [O],fb:-\ [X],fb:-\ [-],fb:-,fb:*\ [\ ],fb:*\ [.],fb:*\ [o],fb:*\ [O],fb:*\ [X],fb:*\ [-],fb:*,fb:#\ [\ ],fb:#\ [.],fb:#\ [o],fb:#\ [O],fb:#\ [X],fb:#\ [-],fb:#
setlocal commentstring=%%%s
setlocal complete=.,w,b,u,t
setlocal concealcursor=nc
setlocal conceallevel=2
setlocal completefunc=vimwiki#emoji#complete
setlocal nocopyindent
setlocal nocursorbind
setlocal nocursorcolumn
setlocal cursorline
setlocal cursorlineopt=both
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'vimwiki'
setlocal filetype=vimwiki
endif
setlocal fillchars=
setlocal fixendofline
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=nvim_treesitter#foldexpr()
setlocal foldignore=#
setlocal foldlevel=2
setlocal foldmarker={{{,}}}
setlocal foldmethod=syntax
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=taskwiki#FoldText()
setlocal formatexpr=
setlocal formatoptions=tqclnj
setlocal formatlistpat=^\\s*\\%(\\(-\\|\\*\\|#\\)\\|\\(\\C\\%(\\d\\+)\\|\\d\\+\\.\\|[ivxlcdm]\\+)\\|[IVXLCDM]\\+)\\|\\l\\{1,2})\\|\\u\\{1,2})\\)\\)\\)\\s\\+\\%(\\[\\([\ .oOX-]\\)\\]\\s\\)\\?
setlocal formatprg=
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=-1
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},0),0],:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,-
setlocal keywordprg=
setlocal linebreak
setlocal nolisp
setlocal lispoptions=
setlocal lispwords=
setlocal list
setlocal listchars=
setlocal makeencoding=
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=bin,hex
setlocal number
setlocal numberwidth=2
setlocal omnifunc=taskwiki#CompleteOmni
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal relativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal scrollback=-1
setlocal noscrollbind
setlocal scrolloff=-1
setlocal shiftwidth=2
setlocal showbreak=
setlocal sidescrolloff=-1
setlocal signcolumn=yes
setlocal nosmartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en-us
setlocal spelloptions=
setlocal statuscolumn=
setlocal statusline=%#lualine_a_normal#\ COMMAND\ %#lualine_transitional_lualine_a_normal_to_lualine_b_normal#ÓÇ∞%#lualine_b_normal#\ ÓÇ†\ 0.7.1-dev\ ÓÇ±%#lualine_b_diff_modified_command#\ ~3\ %#lualine_transitional_lualine_b_diff_modified_command_to_lualine_c_normal#ÓÇ∞%<%#lualine_c_normal#\ index.wiki\ %#lualine_c_normal#%=%#lualine_c_normal#\ utf-8\ ÓÇ≥%#lualine_c_normal#\ Óúí\ ÓÇ≥%#lualine_x_filetype_DevIconDefault_command#\ Óòí%#lualine_c_normal#\ vimwiki\ %#lualine_transitional_lualine_b_normal_to_lualine_c_normal#ÓÇ≤%#lualine_b_normal#\ 5%%\ %#lualine_transitional_lualine_a_normal_to_lualine_b_normal#ÓÇ≤%#lualine_a_normal#\ \ \ 3:1\ \ 
setlocal suffixesadd=.wiki
setlocal noswapfile
setlocal synmaxcol=90
if &syntax != 'vimwiki'
setlocal syntax=vimwiki
endif
setlocal tagfunc=
setlocal tabstop=2
setlocal tagcase=
setlocal tags=./tags;,tags,~/.local/builds/pyShelf/wiki/.vimwiki_tags
setlocal textwidth=0
setlocal thesaurus=
setlocal thesaurusfunc=
setlocal undofile
setlocal undolevels=-123456
setlocal varsofttabstop=
setlocal vartabstop=
setlocal virtualedit=
setlocal winbar=
setlocal winblend=0
setlocal winhighlight=
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal nowrap
setlocal wrapmargin=0
2
normal! zo
let s:l = 3 - ((2 * winheight(0) + 17) / 34)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 3
normal! 0
wincmd w
argglobal
enew
file task\ next\ report
balt ~/.local/builds/pyShelf/wiki/index.wiki
let s:cpo_save=&cpo
set cpo&vim
inoremap <buffer> <expr> <BS> v:lua.MPairs.autopairs_bs()
nmap <buffer> <silent>  <Plug>(taskwarrior_increase)
nmap <buffer> 	 <Plug>(taskwarrior_step_right)
vmap <buffer>  <Plug>(taskwarrior_visual_show_info)
nmap <buffer>  <Plug>(taskwarrior_show_info)
nmap <buffer> <silent>  <Plug>(taskwarrior_decrease)
vmap <buffer> <silent>   <Plug>(taskwarrior_visual_select)
nmap <buffer> <silent>   <Plug>(taskwarrior_select)
nmap <buffer> <silent> + <Plug>(taskwarrior_start_task)
nmap <buffer> <silent> - <Plug>(taskwarrior_stop_task)
nmap <buffer> < <Plug>(taskwarrior_sort_increase)
nmap <buffer> > <Plug>(taskwarrior_sort_decrease)
nmap <buffer> <silent> A <Plug>(taskwarrior_annotate)
nmap <buffer> B <Plug>(taskwarrior_new_bookmark)
vmap <buffer> <silent> D <Plug>(taskwarrior_visual_delete)
nmap <buffer> <silent> D <Plug>(taskwarrior_remove)
nmap <buffer> H <Plug>(taskwarrior_next_format)
nmap <buffer> J <Plug>(taskwarrior_next_history)
nmap <buffer> K <Plug>(taskwarrior_previous_history)
nmap <buffer> L <Plug>(taskwarrior_previous_format)
nmap <buffer> <silent> M <Plug>(taskwarrior_modify_task)
nmap <buffer> Q <Plug>(taskwarrior_quit_all)
nmap <buffer> <silent> R <Plug>(taskwarrior_refresh)
nmap <buffer> <silent> S <Plug>(taskwarrior_sync)
nmap <buffer> <silent> U <Plug>(taskwarrior_urgency)
nmap <buffer> <silent> X <Plug>(taskwarrior_clear_completed)
nmap <buffer> <silent> a <Plug>(taskwarrior_new)
nmap <buffer> <silent> c <Plug>(taskwarrior_command)
vmap <buffer> <silent> d <Plug>(taskwarrior_visual_done)
nmap <buffer> <silent> d <Plug>(taskwarrior_done)
nmap <buffer> f <Plug>(taskwarrior_filter)
nmap <buffer> <silent> m <Plug>(taskwarrior_modify_field)
nmap <buffer> <silent> o <Plug>(taskwarrior_open_annotate)
nmap <buffer> <silent> p <Plug>(taskwarrior_paste)
nmap <buffer> q <Plug>(taskwarrior_quit)
nmap <buffer> <silent> r <Plug>(taskwarrior_report)
nmap <buffer> s <Plug>(taskwarrior_sort_inverse)
nmap <buffer> <silent> u <Plug>(taskwarrior_undo)
nmap <buffer> <silent> x <Plug>(taskwarrior_denotate)
vmap <buffer> <silent> <Del> <Plug>(taskwarrior_visual_delete)
nmap <buffer> <silent> <C-X> <Plug>(taskwarrior_decrease)
nmap <buffer> <silent> <C-A> <Plug>(taskwarrior_increase)
nmap <buffer> <silent> <Del> <Plug>(taskwarrior_delete)
nmap <buffer> <Right> <Plug>(taskwarrior_skip_right)
nmap <buffer> <S-Tab> <Plug>(taskwarrior_step_left)
nmap <buffer> <Left> <Plug>(taskwarrior_skip_left)
nmap <buffer> <F1> <Plug>(taskwarrior_quickref)
vnoremap <buffer> <silent> <Plug>(taskwarrior_visual_select) :call taskwarrior#action#visual('select')
vnoremap <buffer> <silent> <Plug>(taskwarrior_visual_delete) :call taskwarrior#action#visual('delete')
vnoremap <buffer> <silent> <Plug>(taskwarrior_visual_done) :call taskwarrior#action#visual('done')
nnoremap <buffer> <silent> <Plug>(taskwarrior_decrease) :call taskwarrior#action#date(-v:count1)
nnoremap <buffer> <silent> <Plug>(taskwarrior_increase) :call taskwarrior#action#date(v:count1)
nnoremap <buffer> <silent> <Plug>(taskwarrior_select) :call taskwarrior#action#select()
nnoremap <buffer> <silent> <Plug>(taskwarrior_stop_task) :call taskwarrior#system_call(taskwarrior#data#get_uuid(), 'stop', '', 'silent')
nnoremap <buffer> <silent> <Plug>(taskwarrior_start_task) :call taskwarrior#system_call(taskwarrior#data#get_uuid(), 'start', '', 'silent')
nnoremap <buffer> <silent> <Plug>(taskwarrior_paste) :call taskwarrior#action#paste()
nnoremap <buffer> <silent> <Plug>(taskwarrior_modify_task) :call taskwarrior#action#modify('')
nnoremap <buffer> <silent> <Plug>(taskwarrior_modify_field) :call taskwarrior#action#modify('current')
nnoremap <buffer> <silent> <Plug>(taskwarrior_sync) :call taskwarrior#action#sync('sync')
nnoremap <buffer> <silent> <Plug>(taskwarrior_urgency) :call taskwarrior#action#urgency()
nnoremap <buffer> <silent> <Plug>(taskwarrior_undo) :call taskwarrior#action#undo()
nnoremap <buffer> <silent> <Plug>(taskwarrior_clear_completed) :call taskwarrior#action#clear_completed()
nnoremap <buffer> <silent> <Plug>(taskwarrior_refresh) :call taskwarrior#list()
nnoremap <buffer> <silent> <Plug>(taskwarrior_report) :call taskwarrior#action#report()
nnoremap <buffer> <silent> <Plug>(taskwarrior_done) :call taskwarrior#action#set_done()
nnoremap <buffer> <silent> <Plug>(taskwarrior_command) :call taskwarrior#action#command()
nnoremap <buffer> <silent> <Plug>(taskwarrior_new) :call taskwarrior#action#new()
nnoremap <buffer> <silent> <Plug>(taskwarrior_delete) :call taskwarrior#action#delete()
nnoremap <buffer> <silent> <Plug>(taskwarrior_remove) :call taskwarrior#action#remove()
nnoremap <buffer> <silent> <Plug>(taskwarrior_open_annotate) :call taskwarrior#action#annotate('open')
nnoremap <buffer> <silent> <Plug>(taskwarrior_denotate) :call taskwarrior#action#annotate('del')
nnoremap <buffer> <silent> <Plug>(taskwarrior_annotate) :call taskwarrior#action#annotate('add')
vnoremap <buffer> <silent> <Plug>(taskwarrior_visual_show_info) :call taskwarrior#action#visual('info')
nnoremap <buffer> <silent> <Plug>(taskwarrior_new_bookmark) :call taskwarrior#log#bookmark('new')
nnoremap <buffer> <silent> <Plug>(taskwarrior_previous_history) :call taskwarrior#log#history('previous')
nnoremap <buffer> <silent> <Plug>(taskwarrior_next_history) :call taskwarrior#log#history('next')
nnoremap <buffer> <silent> <Plug>(taskwarrior_previous_format) :call taskwarrior#action#columns_format_change('right')
nnoremap <buffer> <silent> <Plug>(taskwarrior_next_format) :call taskwarrior#action#columns_format_change('left')
nnoremap <buffer> <silent> <Plug>(taskwarrior_filter) :call taskwarrior#action#filter()
nnoremap <buffer> <silent> <Plug>(taskwarrior_show_info) :call taskwarrior#action#show_info()
nnoremap <buffer> <silent> <Plug>(taskwarrior_sort_inverse) :call taskwarrior#sort#by_column('m', '')
nnoremap <buffer> <silent> <Plug>(taskwarrior_sort_decrease) :call taskwarrior#sort#by_column('-', '')
nnoremap <buffer> <silent> <Plug>(taskwarrior_sort_increase) :call taskwarrior#sort#by_column('+', '')
nnoremap <buffer> <silent> <Plug>(taskwarrior_step_right) :call taskwarrior#action#move_cursor('right', 'step')
nnoremap <buffer> <silent> <Plug>(taskwarrior_skip_right) :call taskwarrior#action#move_cursor('right', 'skip')
nnoremap <buffer> <silent> <Plug>(taskwarrior_step_left) :call taskwarrior#action#move_cursor('left', 'step')
nnoremap <buffer> <silent> <Plug>(taskwarrior_skip_left) :call taskwarrior#action#move_cursor('left', 'skip')
nnoremap <buffer> <silent> <Plug>(taskwarrior_quit_all) :call taskwarrior#quit_all()
nnoremap <buffer> <silent> <Plug>(taskwarrior_quit) :call taskwarrior#quit()
nnoremap <buffer> <silent> <Plug>(taskwarrior_quickref) :h tw-quickref
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal backupcopy=
setlocal nobinary
setlocal nobreakindent
setlocal breakindentopt=
setlocal bufhidden=
setlocal buflisted
setlocal buftype=nofile
setlocal nocindent
setlocal cinkeys=0{,0},0),0],:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal cinscopedecls=public,protected,private
setlocal colorcolumn=80
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=vimwiki#emoji#complete
setlocal nocopyindent
setlocal nocursorbind
setlocal nocursorcolumn
setlocal cursorline
setlocal cursorlineopt=both
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'taskreport'
setlocal filetype=taskreport
endif
setlocal fillchars=
setlocal fixendofline
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=nvim_treesitter#foldexpr()
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=expr
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcqj
setlocal formatlistpat=^\\s*\\%(\\(-\\|\\*\\|#\\)\\|\\(\\C\\%(\\d\\+)\\|\\d\\+\\.\\|[ivxlcdm]\\+)\\|[IVXLCDM]\\+)\\|\\l\\{1,2})\\|\\u\\{1,2})\\)\\)\\)\\s\\+\\%(\\[\\([\ .oOX-]\\)\\]\\s\\)\\?
setlocal formatprg=
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=-1
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},0),0],:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,-
setlocal keywordprg=
setlocal linebreak
setlocal nolisp
setlocal lispoptions=
setlocal lispwords=
setlocal list
setlocal listchars=
setlocal makeencoding=
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal nomodifiable
setlocal nrformats=bin,hex
setlocal number
setlocal numberwidth=2
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal relativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal scrollback=-1
setlocal noscrollbind
setlocal scrolloff=-1
setlocal shiftwidth=2
setlocal showbreak=
setlocal sidescrolloff=-1
setlocal signcolumn=yes
setlocal smartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en-us
setlocal spelloptions=
setlocal statuscolumn=
setlocal statusline=%<%#lualine_c_inactive#\ task\ next\ report\ [-]\ %#lualine_c_inactive#%=%#lualine_c_inactive#\ \ \ 1:1\ \ 
setlocal suffixesadd=
setlocal noswapfile
setlocal synmaxcol=90
if &syntax != 'taskreport'
setlocal syntax=taskreport
endif
setlocal tagfunc=
setlocal tabstop=2
setlocal tagcase=
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal thesaurusfunc=
setlocal undofile
setlocal undolevels=-123456
setlocal varsofttabstop=
setlocal vartabstop=
setlocal virtualedit=
setlocal winbar=
setlocal winblend=0
setlocal winhighlight=
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal nowrap
setlocal wrapmargin=0
wincmd w
argglobal
enew
file task\ projects\ special
balt task\ next\ report
let s:cpo_save=&cpo
set cpo&vim
inoremap <buffer> <expr> <BS> v:lua.MPairs.autopairs_bs()
nnoremap <buffer> q :call taskwarrior#Bclose(bufnr('%'))
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal backupcopy=
setlocal nobinary
setlocal nobreakindent
setlocal breakindentopt=
setlocal bufhidden=
setlocal buflisted
setlocal buftype=nofile
setlocal nocindent
setlocal cinkeys=0{,0},0),0],:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal cinscopedecls=public,protected,private
setlocal colorcolumn=80
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=vimwiki#emoji#complete
setlocal nocopyindent
setlocal nocursorbind
setlocal nocursorcolumn
setlocal cursorline
setlocal cursorlineopt=both
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'task_projects'
setlocal filetype=task_projects
endif
setlocal fillchars=
setlocal fixendofline
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=nvim_treesitter#foldexpr()
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=expr
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcqj
setlocal formatlistpat=^\\s*\\%(\\(-\\|\\*\\|#\\)\\|\\(\\C\\%(\\d\\+)\\|\\d\\+\\.\\|[ivxlcdm]\\+)\\|[IVXLCDM]\\+)\\|\\l\\{1,2})\\|\\u\\{1,2})\\)\\)\\)\\s\\+\\%(\\[\\([\ .oOX-]\\)\\]\\s\\)\\?
setlocal formatprg=
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=-1
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},0),0],:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,-
setlocal keywordprg=
setlocal linebreak
setlocal nolisp
setlocal lispoptions=
setlocal lispwords=
setlocal list
setlocal listchars=
setlocal makeencoding=
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=bin,hex
setlocal number
setlocal numberwidth=2
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal relativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal scrollback=-1
setlocal noscrollbind
setlocal scrolloff=-1
setlocal shiftwidth=2
setlocal showbreak=
setlocal sidescrolloff=-1
setlocal signcolumn=yes
setlocal smartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en-us
setlocal spelloptions=
setlocal statuscolumn=
setlocal statusline=%<%#lualine_c_inactive#\ task\ projects\ special\ %#lualine_c_inactive#%=%#lualine_c_inactive#\ \ \ 5:1\ \ 
setlocal suffixesadd=
setlocal noswapfile
setlocal synmaxcol=90
if &syntax != 'task_projects'
setlocal syntax=task_projects
endif
setlocal tagfunc=
setlocal tabstop=2
setlocal tagcase=
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal thesaurusfunc=
setlocal undofile
setlocal undolevels=-123456
setlocal varsofttabstop=
setlocal vartabstop=
setlocal virtualedit=
setlocal winbar=
setlocal winblend=0
setlocal winhighlight=
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal nowrap
setlocal wrapmargin=0
wincmd w
argglobal
enew
file task\ calendar\ special
balt task\ projects\ special
let s:cpo_save=&cpo
set cpo&vim
inoremap <buffer> <expr> <BS> v:lua.MPairs.autopairs_bs()
nnoremap <buffer> q :call taskwarrior#Bclose(bufnr('%'))
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal backupcopy=
setlocal nobinary
setlocal nobreakindent
setlocal breakindentopt=
setlocal bufhidden=
setlocal buflisted
setlocal buftype=nofile
setlocal nocindent
setlocal cinkeys=0{,0},0),0],:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal cinscopedecls=public,protected,private
setlocal colorcolumn=80
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=vimwiki#emoji#complete
setlocal nocopyindent
setlocal nocursorbind
setlocal nocursorcolumn
setlocal cursorline
setlocal cursorlineopt=both
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'task_calendar'
setlocal filetype=task_calendar
endif
setlocal fillchars=
setlocal fixendofline
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=nvim_treesitter#foldexpr()
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=expr
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcqj
setlocal formatlistpat=^\\s*\\%(\\(-\\|\\*\\|#\\)\\|\\(\\C\\%(\\d\\+)\\|\\d\\+\\.\\|[ivxlcdm]\\+)\\|[IVXLCDM]\\+)\\|\\l\\{1,2})\\|\\u\\{1,2})\\)\\)\\)\\s\\+\\%(\\[\\([\ .oOX-]\\)\\]\\s\\)\\?
setlocal formatprg=
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=-1
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},0),0],:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,-
setlocal keywordprg=
setlocal linebreak
setlocal nolisp
setlocal lispoptions=
setlocal lispwords=
setlocal list
setlocal listchars=
setlocal makeencoding=
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=bin,hex
setlocal number
setlocal numberwidth=2
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal relativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal scrollback=-1
setlocal noscrollbind
setlocal scrolloff=-1
setlocal shiftwidth=2
setlocal showbreak=
setlocal sidescrolloff=-1
setlocal signcolumn=yes
setlocal smartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en-us
setlocal spelloptions=
setlocal statuscolumn=
setlocal statusline=%<%#lualine_c_inactive#\ task\ calendar\ special\ %#lualine_c_inactive#%=%#lualine_c_inactive#\ \ \ 1:1\ \ 
setlocal suffixesadd=
setlocal noswapfile
setlocal synmaxcol=90
if &syntax != 'task_calendar'
setlocal syntax=task_calendar
endif
setlocal tagfunc=
setlocal tabstop=2
setlocal tagcase=
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal thesaurusfunc=
setlocal undofile
setlocal undolevels=-123456
setlocal varsofttabstop=
setlocal vartabstop=
setlocal virtualedit=
setlocal winbar=
setlocal winblend=0
setlocal winhighlight=
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal nowrap
setlocal wrapmargin=0
wincmd w
exe '1resize ' . ((&lines * 34 + 24) / 49)
exe '2resize ' . ((&lines * 34 + 24) / 49)
exe 'vert 2resize ' . ((&columns * 59 + 51) / 103)
exe '3resize ' . ((&lines * 14 + 24) / 49)
exe '4resize ' . ((&lines * 14 + 24) / 49)
exe 'vert 4resize ' . ((&columns * 83 + 51) / 103)
tabnext
edit lua/plugins.lua
argglobal
balt ~/.local/builds/pyShelf/wiki/index.wiki
let s:cpo_save=&cpo
set cpo&vim
inoremap <buffer> <expr> <BS> v:lua.MPairs.autopairs_bs()
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal backupcopy=
setlocal nobinary
setlocal nobreakindent
setlocal breakindentopt=
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),0],:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal cinscopedecls=public,protected,private
setlocal colorcolumn=80
setlocal comments=:--
setlocal commentstring=--\ %s
setlocal complete=.,w,b,u,t
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=vimwiki#emoji#complete
setlocal nocopyindent
setlocal nocursorbind
setlocal nocursorcolumn
setlocal cursorline
setlocal cursorlineopt=both
setlocal define=\\<function\\|\\<local\\%(\\s\\+function\\)\\=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'lua'
setlocal filetype=lua
endif
setlocal fillchars=
setlocal fixendofline
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=nvim_treesitter#foldexpr()
setlocal foldignore=#
setlocal foldlevel=6
setlocal foldmarker={{{,}}}
setlocal foldmethod=expr
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=v:lua.vim.lsp.formatexpr()
setlocal formatoptions=jcroql
setlocal formatlistpat=^\\s*\\%(\\(-\\|\\*\\|#\\)\\|\\(\\C\\%(\\d\\+)\\|\\d\\+\\.\\|[ivxlcdm]\\+)\\|[IVXLCDM]\\+)\\|\\l\\{1,2})\\|\\u\\{1,2})\\)\\)\\)\\s\\+\\%(\\[\\([\ .oOX-]\\)\\]\\s\\)\\?
setlocal formatprg=
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=-1
setlocal include=
setlocal includeexpr=tr(v:fname,'.','/')
setlocal indentexpr=GetLuaIndent()
setlocal indentkeys=0{,0},0),0],:,0#,!^F,o,O,e,0=end,0=until
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,-
setlocal keywordprg=
setlocal linebreak
setlocal nolisp
setlocal lispoptions=
setlocal lispwords=
setlocal list
setlocal listchars=
setlocal makeencoding=
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=bin,hex
setlocal number
setlocal numberwidth=2
setlocal omnifunc=v:lua.vim.lsp.omnifunc
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal relativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal scrollback=-1
setlocal noscrollbind
setlocal scrolloff=-1
setlocal shiftwidth=2
setlocal showbreak=
setlocal sidescrolloff=-1
setlocal signcolumn=yes
setlocal smartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en-us
setlocal spelloptions=noplainbuffer
setlocal statuscolumn=
setlocal statusline=%#lualine_a_normal#\ COMMAND\ %#lualine_transitional_lualine_a_normal_to_lualine_b_normal#ÓÇ∞%#lualine_b_normal#\ ÓÇ†\ master\ ÓÇ±%#lualine_b_diff_modified_command#\ ~1\ %#lualine_b_normal#ÓÇ±%#lualine_b_diagnostics_hint_command#\ Ô†µ\ 1\ %#lualine_transitional_lualine_b_diagnostics_hint_command_to_lualine_c_normal#ÓÇ∞%<%#lualine_c_normal#\ plugins.lua\ %#lualine_c_normal#%=%#lualine_c_normal#\ utf-8\ ÓÇ≥%#lualine_c_normal#\ Óúí\ ÓÇ≥%#lualine_x_filetype_DevIconLua_command#\ Óò†%#lualine_c_normal#\ lua\ %#lualine_transitional_lualine_b_normal_to_lualine_c_normal#ÓÇ≤%#lualine_b_normal#\ 94%%\ %#lualine_transitional_lualine_a_normal_to_lualine_b_normal#ÓÇ≤%#lualine_a_normal#\ 239:75\ 
setlocal suffixesadd=.lua
setlocal noswapfile
setlocal synmaxcol=90
if &syntax != ''
setlocal syntax=
endif
setlocal tagfunc=v:lua.vim.lsp.tagfunc
setlocal tabstop=2
setlocal tagcase=
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal thesaurusfunc=
setlocal undofile
setlocal undolevels=-123456
setlocal varsofttabstop=
setlocal vartabstop=
setlocal virtualedit=
setlocal winbar=
setlocal winblend=0
setlocal winhighlight=
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal nowrap
setlocal wrapmargin=0
3
normal! zo
3
normal! zo
let s:l = 239 - ((20 * winheight(0) + 23) / 46)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 239
normal! 075|
tabnext 2
set stal=1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
